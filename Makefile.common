MCU = atmega328p
MCU_DUDE = atmega328p
#PROGRAMMER=usbtiny
PROGRAMMER=avrispmkII
PRG_SPEED=8kHz
OBJCOPY = avr-objcopy
CC = avr-gcc
AVRSIZE = avr-size
PORT=`find /dev/cu.wchusbserial* /dev/cu.usbserial* /dev/cu.usbmodem* -print -quit`

CFLAGS = -Wall -Wpedantic -Wextra -std=c2x -Waddr-space-convert -Wno-main -Os -MMD -mmcu=$(MCU) -DF_CPU=8000000UL -I../shared/
LDFLAGS = -mrelax

# strip dead code
CFLAGS += -ffunction-sections -fdata-sections -fshort-enums \
            -DADDR_MAIN_START=$(MAIN_START) \
            -DADDR_MAIN_END="$(MAIN_END) + 2" \
            -DADDR_MAIN_OTA_START=$(MAIN_OTA_START) \
            -DADDR_MAIN_OTA_END="$(MAIN_OTA_END) + 2" \
            -DADDR_WRITE_START=$(WRITE_START) \
            -DADDR_WRITE_END="$(WRITE_END) + 2UL" \
            -DADDR_WRITE_OTA_START=$(WRITE_OTA_START) \
            -DADDR_WRITE_OTA_END="$(WRITE_OTA_END) + 2" \
            -DADDR_BOOT_START=$(BOOT_START) \
            -DADDR_BOOT_END="$(BOOT_END) + 2" \
            -DADDR_BOOT_OTA_START=$(BOOT_OTA_START) \
            -DADDR_BOOT_OTA_END="$(BOOT_OTA_END) + 2" \
            -DLFUSE=$(LFUSE) \
            -DHFUSE=$(HFUSE) \
            -DEFUSE=$(EFUSE) \
            -DLOCKFUSE=$(LOCKFUSE)
LDFLAGS += -Wl,--gc-sections \
			-Wl,--print-gc-sections \
            -Wl,--verbose

#            -Wl,--undefined=boot_version \
#            -Wl,--undefined=boot_ota_version \
#            -Wl,--undefined=main_version \
#            -Wl,--undefined=main_ota_version \
#            -Wl,--undefined=write_version \
#            -Wl,--undefined=write_ota_version \
#            -Wl,--section-start=.main=$(MAIN_START) \
#            -Wl,--section-start=.main_guard=$(MAIN_END) \
#            -Wl,--section-start=.main_ota=$(MAIN_OTA_START) \
#            -Wl,--section-start=.main_ota_guard=$(MAIN_OTA_END) \
#            -Wl,--section-start=.write_ota=$(WRITE_OTA_START) \
#            -Wl,--section-start=.write_ota_guard=$(WRITE_OTA_END) \
#            -Wl,--section-start=.boot_ota=$(BOOT_OTA_START) \
#            -Wl,--section-start=.boot_ota_guard=$(BOOT_OTA_END) \
#            -Wl,--section-start=.boot=$(BOOT_START) \
#            -Wl,--section-start=.boot_guard=$(BOOT_END) \
#            -Wl,--section-start=.write=$(WRITE_START) \
#            -Wl,--section-start=.write_guard=$(WRITE_END) \

# link time optimization requires everything that is supposed to stay being flagged with __attribute__((used))
# CFLAGS += -flto
# LDFLAGS += -flto


SOURCES=$(wildcard *.c)\
	$(wildcard */*.c)\
	$(wildcard */*/*.c)\
	$(wildcard ../shared/*.c)\
	$(wildcard ../shared/*/*.c)\
	$(wildcard ../shared/*/*/*.c)
# OBJECTS=$(SOURCES:%.c=%.o)
OBJECTS=$(patsubst %.c, %.o, $(SOURCES))
DEPS=$(sort $(patsubst %.o, %.d, $(OBJECTS)))
